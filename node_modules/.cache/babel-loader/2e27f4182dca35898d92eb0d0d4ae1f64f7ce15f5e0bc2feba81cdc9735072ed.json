{"ast":null,"code":"var _jsxFileName = \"D:\\\\Study material\\\\udemy\\\\01-starting-setup\\\\src\\\\components\\\\expenses\\\\ExpensesList.js\";\nimport React from \"react\";\nimport ExpenseItem from \"./ExpenseItem.js\";\nimport \"./ExpensesList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ExpensesList = props => {\n  if (props.items.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"expenses-list__fallback\",\n      children: \"No Expenses\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"expenses-list\",\n    children: props.items.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c = ExpensesList;\nexport default ExpensesList;\n\n// items is the array of expenses that we want to display\n// if the array is empty then we display the message \"No Expenses\"\n// if the array is not empty then we map the array to ExpenseItem.js\nvar _c;\n$RefreshReg$(_c, \"ExpensesList\");","map":{"version":3,"names":["React","ExpenseItem","jsxDEV","_jsxDEV","ExpensesList","props","items","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","expense","title","amount","date","id","_c","$RefreshReg$"],"sources":["D:/Study material/udemy/01-starting-setup/src/components/expenses/ExpensesList.js"],"sourcesContent":["import React from \"react\";\r\nimport ExpenseItem from \"./ExpenseItem.js\";\r\nimport \"./ExpensesList.css\";\r\n\r\nconst ExpensesList = (props) => {\r\n  if (props.items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">No Expenses</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {props.items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\nexport default ExpensesList;\r\n\r\n\r\n// items is the array of expenses that we want to display\r\n// if the array is empty then we display the message \"No Expenses\"\r\n// if the array is not empty then we map the array to ExpenseItem.js"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW,MAAM,kBAAkB;AAC1C,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,YAAY,GAAIC,KAAK,IAAK;EAC9B,IAAIA,KAAK,CAACC,KAAK,CAACC,MAAM,KAAK,CAAC,EAAE;IAC5B,oBAAOJ,OAAA;MAAIK,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EAAC;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACjE;EAEA,oBACEV,OAAA;IAAIK,SAAS,EAAC,eAAe;IAAAC,QAAA,EAC1BJ,KAAK,CAACC,KAAK,CAACQ,GAAG,CAAEC,OAAO,iBACvBZ,OAAA,CAACF,WAAW;MAEVe,KAAK,EAAED,OAAO,CAACC,KAAM;MACrBC,MAAM,EAAEF,OAAO,CAACE,MAAO;MACvBC,IAAI,EAAEH,OAAO,CAACG;IAAK,GAHdH,OAAO,CAACI,EAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIhB,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAET,CAAC;AAACO,EAAA,GAjBIhB,YAAY;AAkBlB,eAAeA,YAAY;;AAG3B;AACA;AACA;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}